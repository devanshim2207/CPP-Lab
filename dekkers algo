#include <stdio.h> 
#include <stdlib.h> 
#include <pthread.h>
#include <unistd.h>
int thread1wantstoenter =0, thread2wantstoenter =0, favouredthread =1;
void* process1(){
int i;
while(1){
printf("Process 1 is in non-critical section\n");
sleep(1);
thread1wantstoenter = 1;
while(thread2wantstoenter == 1){
	if(favouredthread == 2){
		thread1wantstoenter =0;
		sleep(1);
		while(favouredthread == 2){
			printf("Process 1 is waiting for entering in critical section \n");
			sleep(1);
			}
		thread1wantstoenter =1;	
		}
		}
		printf("Process 1 is in critical section");
		for(i=0;i<2;i++)
		   printf("Process 1\n");
		favouredthread = 2;
		printf("Process 1 is out of critical section \n");
		sleep(1);
		thread1wantstoenter =0;
		}
pthread_exit(NULL);
}
void* process2(){
int i;
while(1){
printf("Process 2 is in non-critical section\n");
sleep(1);
thread2wantstoenter = 1;
while(thread1wantstoenter == 1){
	if(favouredthread == 1){
		thread2wantstoenter =0;
		sleep(1);
		while(favouredthread == 1){
			printf("Process 2 is waiting for entering in critical section \n");
			sleep(1);
			}
		thread2wantstoenter =1;	
		}
		}
		printf("Process 2 is in critical section");
		for(i=0;i<2;i++)
		   printf("Process 2\n");
		favouredthread = 1;
		printf("Process 2 is out of critical section \n");
		sleep(1);
		thread2wantstoenter =0;
		}
pthread_exit(NULL);
}
int main(){

pthread_t tid1,tid2;
pthread_create(&tid1, NULL, process1, NULL);
pthread_create(&tid2, NULL, process2, NULL);
pthread_join(tid1,NULL);
pthread_join(tid2,NULL);
pthread_exit(NULL);
}
  
